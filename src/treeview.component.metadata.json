[{"__symbolic":"module","version":4,"metadata":{"TreeviewComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component","line":44,"character":1},"arguments":[{"selector":"ngx-treeview","template":"\n      <ng-template #defaultItemTemplate let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\" let-onCheckedChange=\"onCheckedChange\">\n        <div class=\"form-inline row-item\">\n          <i *ngIf=\"item.children\" (click)=\"onCollapseExpand()\" aria-hidden=\"true\" class=\"fa\" [class.fa-caret-right]=\"item.collapsed\"\n            [class.fa-caret-down]=\"!item.collapsed\"></i>\n          <div class=\"form-check\">\n            <input *ngIf=\"config.hasCheckbox\" type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [disabled]=\"item.disabled\"\n              [indeterminate]=\"item.indeterminate\" />\n            <label *ngIf=\"config.hasCheckbox\" class=\"form-check-label\" (click)=\"item.checked = !item.checked; onCheckedChange()\">\n              {{item.text}}\n            </label>\n            <div class=\"input-container\">\n              <input *ngIf=\"item.edit\" type=\"text\" class=\"form-control\" [(ngModel)]=\"item.text\">\n              <i *ngIf=\"item.edit\" (click)=\"item.edit = false\" class=\"fa fa-check\"></i>\n            </div>\n            <span *ngIf=\"!config.hasCheckbox && !item.edit\" (click)=\"onSelectItem(item)\">\n              {{item.text}}\n            </span>\n            <i *ngIf=\"config.hasAdd && !item.edit\" (click)=\"onAddNewItem(item)\" class=\"fa fa-plus\" aria-hidden=\"true\"></i>\n          </div>\n        </div>\n      </ng-template>\n\n      <ng-template #defaultHeaderTemplate let-config=\"config\" let-item=\"item\" let-onCollapseExpand=\"onCollapseExpand\" let-onCheckedChange=\"onCheckedChange\"\n        let-onFilterTextChange=\"onFilterTextChange\">\n        <div *ngIf=\"config.hasFilter\" class=\"row row-filter\">\n          <div class=\"col-12\">\n            <input class=\"form-control\" type=\"text\" [placeholder]=\"i18n.getFilterPlaceholder()\" [(ngModel)]=\"filterText\" (ngModelChange)=\"onFilterTextChange($event)\"\n            />\n          </div>\n        </div>\n        <div *ngIf=\"hasFilterItems\">\n          <div *ngIf=\"config.hasAllCheckBox || config.hasCollapseExpand\" class=\"row row-all\">\n            <div class=\"col-12\">\n              <div class=\"form-check\">\n                <input *ngIf=\"config.hasCheckbox\" type=\"checkbox\" class=\"form-check-input\" [(ngModel)]=\"item.checked\" (ngModelChange)=\"onCheckedChange()\" [indeterminate]=\"item.indeterminate\"\n                />\n                <label *ngIf=\"config.hasAllCheckBox && config.hasCheckbox\" class=\"form-check-label\" (click)=\"item.checked = !item.checked; onCheckedChange()\">\n                  {{i18n.getAllCheckboxText()}}\n                </label>\n                <span *ngIf=\"!config.hasCheckbox && !item.edit\">{{i18n.getAllCheckboxText()}}</span>\n                <label *ngIf=\"config.hasCollapseExpand\" class=\"pull-right form-check-label\" (click)=\"onCollapseExpand()\">\n                  <i [title]=\"i18n.getTooltipCollapseExpandText(item.collapsed)\" aria-hidden=\"true\" class=\"fa\" [class.fa-expand]=\"item.collapsed\"\n                    [class.fa-compress]=\"!item.collapsed\"></i>\n                </label>\n              </div>\n            </div>\n          </div>\n          <div *ngIf=\"config.hasDivider\" class=\"dropdown-divider\"></div>\n        </div>\n      </ng-template>\n\n      <div class=\"treeview-header\">\n        <ng-template [ngTemplateOutlet]=\"headerTemplate || defaultHeaderTemplate\" [ngTemplateOutletContext]=\"headerTemplateContext\">\n        </ng-template>\n      </div>\n      <div [ngSwitch]=\"hasFilterItems\">\n        <div *ngSwitchCase=\"true\" class=\"treeview-container\" [style.max-height.px]=\"maxHeight\">\n          <ngx-treeview-item *ngFor=\"let item of filterItems\" [config]=\"config\" [item]=\"item\" [template]=\"itemTemplate || defaultItemTemplate\"\n            (checkedChange)=\"onItemCheckedChange(item, $event)\"\n            (selectItem)=\"bublingSelect($event)\"\n            (addItem)=\"bublingAdd($event)\">\n          </ngx-treeview-item>\n        </div>\n        <div *ngSwitchCase=\"false\" class=\"treeview-text\">\n          {{i18n.getFilterNoItemsFoundText()}}\n        </div>\n      </div>\n    ","styles":["\n      :host /deep/ .treeview-header .row-filter {\n        margin-bottom: .5rem;\n      }\n\n      :host /deep/ .treeview-header .row-all .fa {\n        cursor: pointer;\n      }\n\n      :host /deep/ .treeview-container .row-item {\n        margin-bottom: .3rem;\n        flex-wrap: nowrap;\n      }\n\n      :host /deep/ .treeview-container .row-item .input-container {\n        position: relative;\n      }\n\n      :host /deep/ .treeview-container .row-item .input-container .fa-check {\n        position: absolute;\n        right: 10px;\n        top: 10px;\n      }\n\n      :host /deep/ .treeview-container .row-item .fa {\n        width: .8rem;\n        cursor: pointer;\n        margin-right: .3rem;\n      }\n\n      :host /deep/ .treeview-container .row-item .fa-plus {\n        margin-left: .3rem;\n      }\n\n      .treeview-container {\n        overflow-y: auto;\n        padding-right: .3rem;\n      }\n\n      .treeview-text {\n        padding: .3rem 0;\n        white-space: nowrap;\n      }\n    "]}]}],"members":{"headerTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":161,"character":5}}]}],"itemTemplate":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":162,"character":5}}]}],"items":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":163,"character":5}}]}],"config":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input","line":164,"character":5}}]}],"selectedChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":165,"character":5}}]}],"filterChange":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":166,"character":5}}]}],"addNewItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":167,"character":5}}]}],"selectItem":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output","line":168,"character":5}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"./treeview-i18n","name":"TreeviewI18n","line":176,"character":21},{"__symbolic":"reference","module":"./treeview-config","name":"TreeviewConfig","line":177,"character":31},{"__symbolic":"reference","module":"./treeview-event-parser","name":"TreeviewEventParser","line":178,"character":29}]}],"ngOnChanges":[{"__symbolic":"method"}],"onAllCollapseExpand":[{"__symbolic":"method"}],"onFilterTextChange":[{"__symbolic":"method"}],"onAllCheckedChange":[{"__symbolic":"method"}],"onItemCheckedChange":[{"__symbolic":"method"}],"raiseSelectedChange":[{"__symbolic":"method"}],"onSelectItem":[{"__symbolic":"method"}],"bublingSelect":[{"__symbolic":"method"}],"onAddNewItem":[{"__symbolic":"method"}],"bublingAdd":[{"__symbolic":"method"}],"createHeaderTemplateContext":[{"__symbolic":"method"}],"generateSelection":[{"__symbolic":"method"}],"updateFilterItems":[{"__symbolic":"method"}],"filterItem":[{"__symbolic":"method"}],"updateCheckedOfAll":[{"__symbolic":"method"}],"updateCollapsedOfAll":[{"__symbolic":"method"}]}}}}]